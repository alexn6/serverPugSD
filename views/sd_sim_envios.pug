//- sd_sim_envios

doctype html
html
  head
    block contentHead
      include sd_head.pug

  body

    block contentHeadBody
      include sd_head_body.pug

    block content
      include sd_navbar.pug

    block contentSim
        br
        br
        br
        container
          .div.col-11.text-center
            .alert.alert-dark(role='alert')
              | Simulador de Envios
          hr
          .row.col-11.text-right
            .input-group.input-group-sm.mb-3.col-4
              .input-group-prepend
                span#inputGroup-sizing-sm.input-group-text Estado del servidor
              .input-group-prepend
                span#estado-serv.input-group-text INACTIVO
              button#botonCambEstServ.btn.btn-info.mb-3.btn-sm(type='button') Cambiar estado
            .div.text-right.mb-3.col-3
              .form-check.form-check-inline
                input#inlineRadio1.form-check-input(type='radio', name='inlineRadioOptions', value='normal')
                label.form-check-label(for='inlineRadio1') normal
              .form-check.form-check-inline
                input#inlineRadio2.form-check-input(type='radio', name='inlineRadioOptions', value='step')
                label.form-check-label(for='inlineRadio2') step
              button#botonRunServ.btn.btn-info.btn-sm(type='button') Iniciar servidor
            .div.text-right.mb-3.col-3
              button#botonCrearCompra.btn.btn-info.btn-sm(type='button') Crear compra
            .input-group.input-group-sm.mb-3.col-2
              .input-group-prepend
                span#inputGroup-sizing-sm.input-group-text.col-12 Cantidad de compras
                span#nro-compras.mb-3.input-group-text 0
          br
          .row.col-11.text-left
            .div.text-left.mb-3.col-2
              label(for='exampleFormControlSelect1') Tareas pendientes
            .div.text-left.mb-3.col-3
              select#selectTareasPend.form-control
            .div.text-left.mb-3.col-4
              button#botonPasoPaso.btn.btn-info.btn-sm.md-3(type='button') Siguiente paso
          div.col-11
            .row.col-12
              //- transiciones ejecutas
              div.col-5
                h4 Tareas
                table#tb_trans.table.table-striped.table-bordered(style='width:100%')
                  thead
                    tr
                      th ID Compra
                      th Accion
                      th Tarea
                    tbody
              //- mjes enviados
              div.col-7
                h4 Mensajes enviados
                table#tb_mjes.table.table-striped.table-bordered(style='width:100%')
                  thead
                    tr
                      th Informacion
                      th Destino
                      th Datos
                    tbody

        script.
          // ########################################################
          // ############## CONECCION AL SERVER_PUG #################
          
          const socket_envios = io('http://localhost:5555');

          var nroStep = 0;
          const SERVER = "envios";

          // ########################################################
          // ############## ESCUCHANDO AL SERVER_PUG ################

          // escucha el estado del servidor
          socket_envios.on('status-envios', function(status) {
            console.log("[status-envios]: Se recibe la respuesta del DIST_MON"+status)
            $('#estado-serv').text(status);

            if(status == "ACTIVO"){
              $( "#botonRunServ" ).text('Detener servidor');
              $("#inlineRadio1").prop( "disabled", true );
              $("#inlineRadio2").prop( "disabled", true );
            }
            else{
              $( "#botonRunServ" ).text('Iniciar servidor');
              $("#inlineRadio1").prop( "disabled", false );
              $("#inlineRadio2").prop( "disabled", false );
            }
          });

          // escucha cuando se crea una nueva compra
          socket_envios.on('update-compras', function(cant) {
            console.log("[update-compras]: Se cra una nueva compra"+cant)
            $('#nro-compras').text(cant);
          });

          // escucha cuando ingresa una tarea
          socket_envios.on('ing-tareas-envios', function(tarea) {
            console.log("[ing-tareas-envios]: Se recibe la respuesta del DIST_MON")
            agregarTareaTablaTareas(tarea);
          });

          // escuchamos la resp al siguiente paso
          socket_envios.on('resp-step-envios', function(data) {
            console.log("[resp-step-envios]: Se recibe la respuesta del DIST_MON: " + data)
            agregarTareaTablaTareas(data);
          });

          // escuchamos los mjes que envio el servidor hacia otrs servidores
          socket_envios.on('mjes-env-envios', function(message) {
            console.log("[mjes-env-envios]: Se recibe la respuesta del DIST_MON")
            agregarTareaTablaMjesEnv(message);
            console.log(message);
          });

          // escucha las tareas pendientes del servidor
          socket_envios.on('tareas-envios', function(tareas) {
            console.log("[tareas-envios]: Se recibe la respuesta del DIST_MON"+tareas)
            actualizarSelectTareasPend(tareas);
          });

          // ########################################################
          // ################ PEDIR SIGUIENTE PASO ##################
          $( "#botonPasoPaso" ).click(function() {
            socket_envios.emit('sig-paso', 'envios', '0');
            nroStep++;
            console.log("[STEP] => Nro de step: "+nroStep)
            return false;
          });

          // ########################################################
          // ############## CONTROL ESTADO SERVIDOR #################
          $( "#botonRunServ" ).click(function() {
            // controlar el texto del boton y en base a eso
            // lanzar un evento distinto (INICIAR/ DETENER)
            var modoRun = $( this ).text();
            if(modoRun == "Iniciar servidor"){
              //- alert("Pide iniciar el servidor");
              var modo = $( "input:checked" ).val();
              if(typeof(modo) == 'undefined'){
                alert("Debe seleccionar el modo del servidor");
              }
              else{
                socket_envios.emit('init-serv', SERVER, modo);
              }
            }
            else{
              //- alert("Pide detener el servidor");
              socket_envios.emit('stop-serv', SERVER, modo);
            }
            
            // luego se deberia cambiar el contenido del servidor
            return false;
          });

          // ############################################################
          // #################### Funciones soporte #####################

          function agregarTareaTablaTareas(datos){
            // no hay tarea para realizar
            if(datos.tarea == undefined){
              datos.tarea = 'nada para hacer';
            }
            var datosFila = '<tr><td>'+datos.id+'</td><td>'+datos.accion+'</td><td>'+datos.tarea+'</td></tr>'
            // agregamos los datos recibidos a la tabla
            $('#tb_trans').append(datosFila);
          }

          function agregarTareaTablaMjesEnv(mjesEnviados){
            var cantMjesEnviados = mjesEnviados.length;
            var datosMje;
            for(let i= 0; i < cantMjesEnviados; i++){
              datosMje = mjesEnviados[i];
              var datosFila = '<tr><td>'+datosMje.tarea+'</td><td>'+datosMje.destino+'</td><td>'+datosMje.datos+'</td></tr>'
              // agregamos los datos recibidos a la tabla
              $('#tb_mjes').append(datosFila);
            }
          }

           // actualiza el select con las tareas recibidas
          function actualizarSelectTareasPend(tareas){
            console.log(tareas);
            $('#selectTareasPend').empty();
            for(var i= 0; i < tareas.length; i++){
              var datosOption = '<option> '+tareas[i];
              $('#selectTareasPend').append(datosOption);
            }
            //- $('#selectTareasPend').append($('<option>', {
            //-     value: 1,
            //-     text: 'My option'
            //- }));
          }